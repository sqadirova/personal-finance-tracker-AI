version: '3.8'

services:
  postgres-auth:
    image: postgres:14
    container_name: auth-postgres
    restart: always
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${AUTH_DB_PORT}:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d authdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-transactions:
    image: postgres:14
    container_name: transactions-postgres
    restart: always
    environment:
      POSTGRES_DB: transactionsdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${TRANSACTIONS_DB_PORT}:5432"
    volumes:
      - transactions_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d transactionsdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  budget-postgres:
    image: postgres:14
    container_name: budget-postgres
    restart: always
    environment:
      POSTGRES_DB: budgetdb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${BUDGET_DB_PORT}:5432"
    volumes:
      - budget_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d budgetdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  ai-recommender:
    build:
      context: ../ai-recommender
    container_name: ai-recommender
    ports:
      - "${AI_PORT}:5000"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  auth-service:
    build:
      context: ../apps/auth-service
    container_name: auth-service
    ports:
      - "${AUTH_PORT}:3001"
    restart: unless-stopped
    depends_on:
      postgres-auth:
        condition: service_healthy
    networks:
      - default

  transactions-service:
    build:
      context: ../apps/transactions-service
    container_name: transactions-service
    ports:
      - "${TRANSACTIONS_PORT}:3003"
    restart: unless-stopped
    depends_on:
      postgres-transactions:
        condition: service_healthy
    networks:
      - default

  budget-service:
    build:
      context: ../apps/budget-service
    container_name: budget-service
    ports:
      - "${BUDGET_PORT}:3002"
    restart: unless-stopped
    depends_on:
      budget-postgres:
        condition: service_healthy
      ai-recommender:
        condition: service_started
    networks:
      - default

volumes:
  auth_db_data:
  transactions_db_data:
  budget_db_data:

networks:
  default:
    name: finance-network
